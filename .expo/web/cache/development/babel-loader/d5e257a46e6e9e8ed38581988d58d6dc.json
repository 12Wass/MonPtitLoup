{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Layout, TextInput, themeColor, TopNav, useTheme } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState([{\n    key: '',\n    value: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var addHandler = function addHandler() {\n    var _inputs = _toConsumableArray(inputs);\n\n    console.log('add handler');\n\n    _inputs.push({\n      key: '',\n      value: ''\n    });\n\n    setInputs(_inputs);\n  };\n\n  var deleteHandler = function deleteHandler(key) {\n    var _inputs = inputs.filter(function (input, index) {\n      return index != key;\n    });\n\n    setInputs(_inputs);\n  };\n\n  var inputHandler = function inputHandler(text, key) {\n    var _inputs = _toConsumableArray(inputs);\n\n    console.log('input handler');\n    _inputs[key].value = text;\n    _inputs[key].key = key;\n    setInputs(_inputs);\n  };\n\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: \"Choix des joueurs\",\n      leftContent: _jsx(Ionicons, {\n        name: \"chevron-back\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      leftAction: function leftAction() {\n        return navigation.goBack();\n      },\n      rightContent: _jsx(Ionicons, {\n        name: isDarkmode ? \"sunny\" : \"moon\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      rightAction: function rightAction() {\n        if (isDarkmode) {\n          setTheme(\"light\");\n        } else {\n          setTheme(\"dark\");\n        }\n      }\n    }), _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [inputs.map(function (input, key) {\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            padding: 10\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"Nom du joueur\",\n            value: input.value,\n            onChangeText: function onChangeText(text) {\n              return inputHandler(text, key);\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return deleteHandler(key);\n            },\n            children: _jsx(Ionicons, {\n              name: isDarkmode ? \"person-remove-outline\" : \"person-remove\",\n              size: 20,\n              style: {\n                padding: 10\n              }\n            })\n          })]\n        }, key);\n      }), _jsx(Button, {\n        style: {\n          marginTop: 10\n        },\n        text: \"Ajouter un nouveau joueur\",\n        status: \"info\",\n        onPress: addHandler\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/wassimdahmane/Documents/personal/projects/expo-supabase/src/screens/GameForm.tsx"],"names":["React","useState","Button","Layout","TextInput","themeColor","TopNav","useTheme","Ionicons","navigation","isDarkmode","setTheme","key","value","inputs","setInputs","addHandler","_inputs","console","log","push","deleteHandler","filter","input","index","inputHandler","text","white100","dark","goBack","flex","alignItems","justifyContent","map","flexDirection","padding","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Linking, TouchableOpacity, View} from \"react-native\";\nimport { MainStackParamList } from \"../types/navigation\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport {Button, Layout, Text, TextInput, themeColor, TopNav, useTheme} from \"react-native-rapi-ui\";\nimport {Ionicons} from \"@expo/vector-icons\";\nimport Toast from 'react-native-toast-message';\n\nexport default function ({\n  navigation,\n}: NativeStackScreenProps<MainStackParamList, \"MainTabs\">) {\n    const { isDarkmode, setTheme } = useTheme();\n    const [inputs, setInputs ] = useState([{key: '', value: ''}])\n\n    // TODO : Limiter le nombre de joueurs\n\n    const addHandler = () => {\n        const _inputs = [...inputs];\n        console.log('add handler');\n        _inputs.push({key: '', value: ''});\n        setInputs(_inputs);\n    }\n\n    const deleteHandler = (key: number) => {\n        const _inputs = inputs.filter((input, index) => index != key);\n        setInputs(_inputs);\n    }\n\n    const inputHandler = (text: any, key: any) => {\n        const _inputs = [...inputs];\n        console.log('input handler');\n        _inputs[key].value = text;\n        _inputs[key].key = key;\n        setInputs(_inputs);\n    }\n\n    return (\n    <Layout>\n        <TopNav\n            middleContent=\"Choix des joueurs\"\n            leftContent={\n                <Ionicons\n                    name=\"chevron-back\"\n                    size={20}\n                    color={isDarkmode ? themeColor.white100 : themeColor.dark}\n                />\n            }\n            leftAction={() => navigation.goBack()}\n            rightContent={\n                <Ionicons\n                    name={isDarkmode ? \"sunny\" : \"moon\"}\n                    size={20}\n                    color={isDarkmode ? themeColor.white100 : themeColor.dark}\n                />\n            }\n            rightAction={() => {\n                if (isDarkmode) {\n                    setTheme(\"light\");\n                } else {\n                    setTheme(\"dark\");\n                }\n            }}\n        />\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n          { inputs.map((input,key) => (\n              <View style={{\n                  flexDirection: 'row',\n                  justifyContent: 'flex-start',\n                  padding: 10\n              }} key={key}>\n                <TextInput placeholder={\"Nom du joueur\"} value={input.value} onChangeText={(text) => inputHandler(text, key)} />\n                <TouchableOpacity onPress={() => deleteHandler(key)}>\n                    <Ionicons\n                        name={isDarkmode ? \"person-remove-outline\" : \"person-remove\"}\n                        size={20}\n                        style={{\n                            padding: 10\n                        }}\n                    />\n                </TouchableOpacity>\n              </View>\n          ))}\n          <Button\n              style={{ marginTop: 10 }}\n              text=\"Ajouter un nouveau joueur\"\n              status=\"info\"\n              onPress={addHandler}\n          />\n\n      </View>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}