{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { supabase } from \"../initSupabase\";\nimport { Layout, Button, Text, TopNav, Section, SectionContent, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: \"Mon p'tit loup\",\n      rightContent: _jsx(Ionicons, {\n        name: isDarkmode ? \"sunny\" : \"moon\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      rightAction: function rightAction() {\n        if (isDarkmode) {\n          setTheme(\"light\");\n        } else {\n          setTheme(\"dark\");\n        }\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Section, {\n        style: {\n          marginTop: 20\n        },\n        children: _jsxs(SectionContent, {\n          children: [_jsx(Text, {\n            fontWeight: \"bold\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Le loup garou tah les fous\"\n          }), _jsx(Button, {\n            style: {\n              marginTop: 10\n            },\n            text: \"Vers la documentation\",\n            status: \"info\",\n            onPress: function onPress() {\n              return Linking.openURL(\"https://rapi-ui.kikiding.space/\");\n            }\n          }), _jsx(Button, {\n            text: \"Clique pas ici\",\n            onPress: function onPress() {\n              navigation.navigate(\"SecondScreen\");\n            },\n            style: {\n              marginTop: 10\n            }\n          }), _jsx(Button, {\n            status: \"danger\",\n            text: \"Deconnexion\",\n            onPress: function _callee() {\n              var _await$supabase$auth$, error;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(supabase.auth.signOut());\n\n                    case 2:\n                      _await$supabase$auth$ = _context.sent;\n                      error = _await$supabase$auth$.error;\n\n                      if (!error) {\n                        alert(\"Signed out!\");\n                      }\n\n                      if (error) {\n                        alert(error.message);\n                      }\n\n                    case 6:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            },\n            style: {\n              marginTop: 10\n            }\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/wassimdahmane/Documents/personal/projects/expo-supabase/src/screens/Home.tsx"],"names":["React","supabase","Layout","Button","Text","TopNav","Section","SectionContent","useTheme","themeColor","Ionicons","navigation","isDarkmode","setTheme","white100","dark","flex","alignItems","justifyContent","marginTop","textAlign","Linking","openURL","navigate","auth","signOut","error","alert","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,SAASC,QAAT;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,cANF,EAOEC,QAPF,EAQEC,UARF,QASO,sBATP;AAUA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,eAAe,gBAE4C;AAAA,MADzDC,UACyD,QADzDA,UACyD;;AACzD,kBAAiCH,QAAQ,EAAzC;AAAA,MAAQI,UAAR,aAAQA,UAAR;AAAA,MAAoBC,QAApB,aAAoBA,QAApB;;AACA,SACE,MAAC,MAAD;AAAA,eACE,KAAC,MAAD;AACE,MAAA,aAAa,EAAC,gBADhB;AAEE,MAAA,YAAY,EACV,KAAC,QAAD;AACE,QAAA,IAAI,EAAED,UAAU,GAAG,OAAH,GAAa,MAD/B;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAEA,UAAU,GAAGH,UAAU,CAACK,QAAd,GAAyBL,UAAU,CAACM;AAHvD,QAHJ;AASE,MAAA,WAAW,EAAE,uBAAM;AACjB,YAAIH,UAAJ,EAAgB;AACdC,UAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,CAAC,MAAD,CAAR;AACD;AACF;AAfH,MADF,EAkBE,KAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLG,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA,gBAOE,KAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAhB;AAAA,kBACE,MAAC,cAAD;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,UAAU,EAAC,MAAjB;AAAwB,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAA/B;AAAA;AAAA,YADF,EAIE,KAAC,MAAD;AACE,YAAA,KAAK,EAAE;AAAED,cAAAA,SAAS,EAAE;AAAb,aADT;AAEE,YAAA,IAAI,EAAC,uBAFP;AAGE,YAAA,MAAM,EAAC,MAHT;AAIE,YAAA,OAAO,EAAE;AAAA,qBAAME,OAAO,CAACC,OAAR,CAAgB,iCAAhB,CAAN;AAAA;AAJX,YAJF,EAUE,KAAC,MAAD;AACE,YAAA,IAAI,EAAC,gBADP;AAEE,YAAA,OAAO,EAAE,mBAAM;AACbX,cAAAA,UAAU,CAACY,QAAX,CAAoB,cAApB;AACD,aAJH;AAKE,YAAA,KAAK,EAAE;AACLJ,cAAAA,SAAS,EAAE;AADN;AALT,YAVF,EAmBE,KAAC,MAAD;AACE,YAAA,MAAM,EAAC,QADT;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,OAAO,EAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDACiBlB,QAAQ,CAACuB,IAAT,CAAcC,OAAd,EADjB;;AAAA;AAAA;AACCC,sBAAAA,KADD,yBACCA,KADD;;AAEP,0BAAI,CAACA,KAAL,EAAY;AACVC,wBAAAA,KAAK,CAAC,aAAD,CAAL;AACD;;AACD,0BAAID,KAAJ,EAAW;AACTC,wBAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACD;;AAPM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHX;AAYE,YAAA,KAAK,EAAE;AACLT,cAAAA,SAAS,EAAE;AADN;AAZT,YAnBF;AAAA;AADF;AAPF,MAlBF;AAAA,IADF;AAmED","sourcesContent":["import React from \"react\";\nimport { View, Linking } from \"react-native\";\nimport { MainStackParamList } from \"../types/navigation\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { supabase } from \"../initSupabase\";\nimport {\n  Layout,\n  Button,\n  Text,\n  TopNav,\n  Section,\n  SectionContent,\n  useTheme,\n  themeColor,\n} from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport default function ({\n  navigation,\n}: NativeStackScreenProps<MainStackParamList, \"MainTabs\">) {\n  const { isDarkmode, setTheme } = useTheme();\n  return (\n    <Layout>\n      <TopNav\n        middleContent=\"Mon p'tit loup\"\n        rightContent={\n          <Ionicons\n            name={isDarkmode ? \"sunny\" : \"moon\"}\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        rightAction={() => {\n          if (isDarkmode) {\n            setTheme(\"light\");\n          } else {\n            setTheme(\"dark\");\n          }\n        }}\n      />\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Section style={{ marginTop: 20 }}>\n          <SectionContent>\n            <Text fontWeight=\"bold\" style={{ textAlign: \"center\" }}>\n              Le loup garou tah les fous\n            </Text>\n            <Button\n              style={{ marginTop: 10 }}\n              text=\"Vers la documentation\"\n              status=\"info\"\n              onPress={() => Linking.openURL(\"https://rapi-ui.kikiding.space/\")}\n            />\n            <Button\n              text=\"Clique pas ici\"\n              onPress={() => {\n                navigation.navigate(\"SecondScreen\");\n              }}\n              style={{\n                marginTop: 10,\n              }}\n            />\n            <Button\n              status=\"danger\"\n              text=\"Deconnexion\"\n              onPress={async () => {\n                const { error } = await supabase.auth.signOut();\n                if (!error) {\n                  alert(\"Signed out!\");\n                }\n                if (error) {\n                  alert(error.message);\n                }\n              }}\n              style={{\n                marginTop: 10,\n              }}\n            />\n          </SectionContent>\n        </Section>\n      </View>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}